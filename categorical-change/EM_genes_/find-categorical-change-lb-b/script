# Define file paths
# Get input_file by running grep -vi 'pathogenic' homo_sapiens_variation_missense_ClinVar.txt | grep -vi 'likely pathogenic' | grep -vi 'uncertain' | grep -i 'benign' | grep -i 'likely benign' > homo_sapiens_variation_missense_ClinVar_benign_likely_benign_only_EM_genes.txt
input_file <- "homo_sapiens_variation_missense_ClinVar_benign_likely_benign_only_EM_genes.txt"
property_lookup_file <- "Amino_acid_change_with_property_change.txt"
identifier_file <- "The-Epigenetic-Machinery.csv"

# Output
output_file <- "homo_sapiens_variation_missense_ClinVar_benign_likely_benign_only_EM_genes_aa_change.txt"

# Read the input files
identifiers <- read.csv(identifier_file, header = TRUE, stringsAsFactors = FALSE)

# Extract relevant gene names from the first column of the identifier file
relevant_gene_names <- identifiers[, 1]

# Ensure relevant_gene_names is atomic
relevant_gene_names <- as.vector(relevant_gene_names)

# Write relevant gene names to a temporary file
temp_gene_file <- tempfile()
writeLines(relevant_gene_names, temp_gene_file)

# Use grep to filter the variant file
filtered_variant_file <- tempfile()
system(paste("grep -F -f", temp_gene_file, input_file, ">", filtered_variant_file))

# Read the filtered variant file
data <- read.table(filtered_variant_file, header = FALSE, sep = "\t", stringsAsFactors = FALSE, quote = "")

# Clean up temporary files
unlink(temp_gene_file)
unlink(filtered_variant_file)

# Read the property lookup file
properties <- read.table(property_lookup_file, header = FALSE, sep = " ", stringsAsFactors = FALSE, quote = "")

# Rename columns for better understanding
colnames(data) <- c("Column1", "Isoform", "AminoAcidChange", "GeneName", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "UniProt", "Column14")
colnames(properties) <- c("AminoAcidChange", "PropertyChange")

# Function to remove numeric characters between amino acid names
filter_amino_acids <- function(variant) {
  gsub("p\\.([A-Za-z]+)\\d+([A-Za-z]+)", "\\1\\2", variant)
}

# Apply the function to the relevant column (assuming the third column contains the amino acid changes)
data$AminoAcidChange <- sapply(data$AminoAcidChange, filter_amino_acids)

# Ensure AminoAcidChange is a character vector in both dataframes
data$AminoAcidChange <- as.character(data$AminoAcidChange)
properties$AminoAcidChange <- as.character(properties$AminoAcidChange)

# Merge the data with properties based on the amino acid change
merged_data <- merge(data, properties, by = "AminoAcidChange")

# Select only the Isoform, AminoAcidChange, and PropertyChange columns for output
output_data <- merged_data[, c("Isoform", "AminoAcidChange", "PropertyChange")]

# Write the modified data to the output file
write.table(output_data, file = output_file, sep = "\t", row.names = FALSE, col.names = FALSE, quote = FALSE)

# Print a message indicating completion
cat("Filtered data with property changes has been saved to", output_file, "\n")
