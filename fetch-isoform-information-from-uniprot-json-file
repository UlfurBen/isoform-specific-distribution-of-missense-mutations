import requests
import json

# URL of the UniProt entry in JSON format for KMT2D
uniprot_id = "O43918"
url = f"https://www.uniprot.org/uniprotkb/{uniprot_id}.json"

# Send a request to the UniProt API
response = requests.get(url)

# Check if the request was successful
if response.status_code == 200:
    data = response.json()
    
    # Initialize a list to hold isoform information
    isoform_data = []
    
    # Extract isoform information
    if 'comments' in data:
        for comment in data['comments']:
            if comment['commentType'] == 'ALTERNATIVE PRODUCTS':
                for isoform in comment['isoforms']:
                    isoform_entry = {
                        "isoform_id": isoform['isoformIds'],
                        "name": isoform['name']['value'],
                        "sequence": isoform['sequence']['value'] if 'sequence' in isoform else None,
                        "is_canonical": isoform.get('isCanonical', False),
                        "note": isoform.get('note', '')
                    }
                    isoform_data.append(isoform_entry)
    
    # Extract computationally mapped isoforms (if any)
    if 'features' in data:
        for feature in data['features']:
            if feature['type'] == 'alternative sequence' and feature.get('alternativeSequence', {}).get('note') == 'Computationally mapped':
                computational_isoform_entry = {
                    "isoform_id": feature['id'],
                    "sequence": feature['alternativeSequence']['sequence'],
                    "is_computationally_mapped": True
                }
                isoform_data.append(computational_isoform_entry)

    # Save the combined information to a JSON file
    with open('isoforms.json', 'w') as f:
        json.dump(isoform_data, f, indent=4)
    
    print("Isoform sequences (including computational ones) have been saved to isoforms.json")
else:
    print(f"Failed to retrieve data from UniProt. Status code: {response.status_code}")
