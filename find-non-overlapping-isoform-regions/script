# Load required libraries
library(GenomicRanges)
library(rtracklayer)
library(dplyr)

# Define file paths
gtf_file <- "path/to/Homo_sapiens.GRCh38.104.gtf.gz"
variant_file <- "path/to/variant_file.csv"

# Read the GTF file
isoforms <- import(gtf_file)

# Filter for exons
exons <- isoforms[isoforms$type == "exon"]

# Group exons by isoform
isoform_granges <- split(exons, exons$transcript_id)

# Find non-overlapping regions
isoform_specific_regions <- lapply(isoform_granges, function(isoform) {
  other_isoforms <- isoform_granges[names(isoform_granges) != names(isoform)]
  other_exons <- unlist(other_isoforms)
  specific_regions <- setdiff(isoform, other_exons)
  return(specific_regions)
})

# Combine results into a single GRanges object
isoform_specific_regions <- unlist(isoform_specific_regions)

# Read the variant file
variants <- read.csv(variant_file, header = TRUE, stringsAsFactors = FALSE)

# Convert variant coordinates to GRanges
variant_gr <- GRanges(seqnames = "chrX", # change if other chromosomes are involved
                      ranges = IRanges(start = as.numeric(gsub("NC_000023.11:g.", "", variants$NC_000023.11.g.)),
                                       end = as.numeric(gsub("NC_000023.11:g.", "", variants$NC_000023.11.g.))),
                      strand = "*")

# Find overlaps with isoform-specific regions
overlaps <- findOverlaps(variant_gr, isoform_specific_regions)

# Extract overlapping variants
overlapping_variants <- variants[queryHits(overlaps), ]
overlapping_variants$Isoform <- names(isoform_specific_regions)[subjectHits(overlaps)]

# Print results
print(overlapping_variants)

# Export overlapping variants to a new CSV file
write.csv(overlapping_variants, "overlapping_variants.csv", row.names = FALSE)

# Print completion message
cat("Isoform-specific regions identified and overlapping variants saved to overlapping_variants.csv\n")
