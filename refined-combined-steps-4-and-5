import os
import requests
import json
import pandas as pd
import csv

# Path to your CSV file (fetched from link on epigeneticmachinery.org website)
csv_file_path = "/Users/ulfurfjolnisson/Work/The Epigenetic Machinery.csv"

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(csv_file_path)

# Extract all rows from the "UniProt" column and save them to a list
UniProt_ids = df["UniProt"].tolist()

# Display the UniProt IDs
print(UniProt_ids)

# Directory to save the variation files
output_dir = "Variants"

# Create the directory if it doesn't exist
os.makedirs(output_dir, exist_ok=True)

# Retrieve variation data from UniProt IDs
for UniProt_id in UniProt_ids:
    # Iterate over UniProt IDs and fetch data
    requestURL = f"https://www.ebi.ac.uk/proteins/api/variation/{UniProt_id}?format=json"

    response = requests.get(requestURL)
    if response.ok:
        data = response.json()
        print(data)

        file_name = f"{UniProt_id}_variant.json"
        file_path = os.path.join(output_dir, file_name)
        
        # Save the data to a file named after UniProt ID
        with open(file_path, 'w') as file:
            json.dump(data, file, indent=4)
    else:
        print(f"Failed to retrieve data for UniProt ID: {UniProt_id}")

print("Data retrieval and saving complete.")








# Directory containing the JSON files
directory = 'Variants'

# Open a CSV file to write the data
with open('mutation_data.csv', 'w', newline='') as csvfile:
    fieldnames = ['File Name', 'Consequence Type', 'Genomic Location', 'Frequency']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    
    writer.writeheader()
    
    # Iterate over each file in the directory
    for filename in os.listdir(directory):
        if filename.endswith('.json'):
            file_path = os.path.join(directory, filename)
            
            # Load the JSON data from the file
            with open(file_path, 'r') as file:
                data = json.load(file)
            
            # Iterate through the JSON data to extract and print the required information
            for feature in data.get('features', []):
                consequence_type = feature.get('consequenceType', 'N/A')
                
                # Exclude rows that don't have the consequence type of "missense"
                if consequence_type != "missense":
                    continue
                
                genomic_location = ', '.join(feature.get('genomicLocation', []))
                
                population_frequencies = feature.get('populationFrequencies', [])
                if population_frequencies:
                    for frequency_data in population_frequencies:
                        frequency = frequency_data.get('frequency', 'N/A')
                        print(f"File: {filename}, Consequence Type: {consequence_type}, Genomic Location: {genomic_location}, Frequency: {frequency}")
                        writer.writerow({
                            'File Name': filename,
                            'Consequence Type': consequence_type,
                            'Genomic Location': genomic_location,
                            'Frequency': frequency
                        })
                else:
                    print(f"File: {filename}, Consequence Type: {consequence_type}, Genomic Location: {genomic_location}, Frequency: N/A")
                    writer.writerow({
                        'File Name': filename,
                        'Consequence Type': consequence_type,
                        'Genomic Location': genomic_location,
                        'Frequency': 'N/A'
                    })

print("Data extraction and saving complete.")
